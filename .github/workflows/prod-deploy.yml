name: Prod Server CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle

      - name: Create application.yml from secrets
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_PROD_PROPERTIES }}" > src/main/resources/application.yml

      - name: Build JAR
        run: ./gradlew clean build -x test

      - name: Save SSH key
        run: |
          echo "${{ secrets.PROD_SERVER_SSH_KEY }}" > prod.pem
          chmod 400 prod.pem

      - name: Deploy to Prod Server
        run: |
          set -e
          APP_DIR=/home/${{ secrets.PROD_SERVER_USER }}/lv3-final-mission
          JAR_NAME=lv3-final-mission-0.0.1-SNAPSHOT.jar

          # 기존 서비스 종료
          if ssh -i prod.pem -p ${{ secrets.PROD_SERVER_PORT }} ${{ secrets.PROD_SERVER_USER }}@${{ secrets.PROD_SERVER_HOST }} "pgrep -f $JAR_NAME" > /dev/null; then
            echo "Stopping existing service..."
            ssh -i prod.pem -p ${{ secrets.PROD_SERVER_PORT }} ${{ secrets.PROD_SERVER_USER }}@${{ secrets.PROD_SERVER_HOST }} "pkill -f $JAR_NAME"
          fi

          # 배포 디렉토리 생성
          ssh -i prod.pem -p ${{ secrets.PROD_SERVER_PORT }} ${{ secrets.PROD_SERVER_USER }}@${{ secrets.PROD_SERVER_HOST }} "mkdir -p $APP_DIR"

          # JAR 업로드
          scp -i prod.pem -P ${{ secrets.PROD_SERVER_PORT }} ./build/libs/*.jar ${{ secrets.PROD_SERVER_USER }}@${{ secrets.PROD_SERVER_HOST }}:$APP_DIR/$JAR_NAME

          # 서비스 시작
          ssh -i prod.pem -p ${{ secrets.PROD_SERVER_PORT }} ${{ secrets.PROD_SERVER_USER }}@${{ secrets.PROD_SERVER_HOST }} "nohup java -jar $APP_DIR/$JAR_NAME > $APP_DIR/nohup.out 2>&1 &"

          echo "Deployment complete!"
